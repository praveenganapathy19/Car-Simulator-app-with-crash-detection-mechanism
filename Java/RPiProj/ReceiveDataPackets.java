import java.io.*;import java.net.*;	public class ReceiveDataPackets {	private static String x_M = "0", x_P = "0", x_S = "0", y_M = "0", y_P = "0", y_S = "0", theta_M = "0", theta_P = "0", theta_S = "0";		public static void main(String[] args) 	{		// TODO Auto-generated method stub		ReceiveDataPackets rdp = new ReceiveDataPackets();				PrintWriter output;		BufferedReader input;				final String SERVER_IP_M = "192.168.2.92";		final String SERVER_IP_P = "192.168.2.95";		final String SERVER_IP_S = "192.168.2.97";				String id = "M",id_ip;		String path="/home/pi/Desktop/Parameters/Recv/";		String fileName_p="recv_p.txt";		String fileName_m="recv_m.txt";		String fileName_s="recv_s.txt";		String ownFile="/home/pi/Desktop/Parameters/data.txt";		String line=null;		String str[]= {"","","","","","","","",""};		int i=0;		        try(ServerSocket serverSocket = new ServerSocket(4141))         {        	id_ip = SERVER_IP_P;            while (true)             {		i=0;                System.out.println("Listening on port 4141, CRTL-C to quit ");                Socket socket = serverSocket.accept();                try                {                	output = new PrintWriter(socket.getOutputStream(), true);                    input = new BufferedReader(new InputStreamReader(socket.getInputStream()));                    System.out.println("Connection accepted.");                    String in = "";                    while ((in = input.readLine()) != null)                     {                        System.out.println("Received: " + in);                        if (in.equals("SYN"))                        { // Synchronize                            rdp.write(output, "SYN-ACK"); // Synchronize-Acknowledge                        }	                        if (in.equals("FIN"))                        { // Final                            rdp.write(output, "FIN-ACK"); // Final-Acknowledge                            break;                        }                        if (in.contains("id = "))                        {                            id = in.substring(5);                        }                        if (in.contains("x = "))                        {                            if(id.equals("M"))                            	x_M = in.substring(4);                            else if(id.equals("P"))                            	x_P = in.substring(4);                            else if(id.equals("S"))                            	x_S = in.substring(4);                        }                        if (in.contains("y = "))                        {                        	if(id.equals("M"))                            	y_M = in.substring(4);                            else if(id.equals("P"))                            	y_P = in.substring(4);                            else if(id.equals("S"))                            	y_S = in.substring(4);                        }                        if (in.contains("theta = "))                        {                        	if(id.equals("M"))                            	theta_M = in.substring(8);                            else if(id.equals("P"))                            	theta_P = in.substring(8);                            else if(id.equals("S"))                            	theta_S = in.substring(8);                        }                    }                    System.out.print("Closing socket.\n\n");                    System.out.println("x_M     = " + x_M);                    System.out.println("y_M     = " + y_M);                    System.out.println("theta_M = " + theta_M);                    System.out.println("x_P     = " + x_P);                    System.out.println("y_P     = " + y_P);                    System.out.println("theta_P = " + theta_P);                    System.out.println("x_S     = " + x_S);                    System.out.println("y_S     = " + y_S);                    System.out.println("theta_S = " + theta_S);                                                            // Updating from the own file                    FileInputStream fileInputStream = new FileInputStream (new File(ownFile));    	            InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);    	            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);    	                	            while ( (line = bufferedReader.readLine()) != null)    	            {    	            	str[i]=line;    	            	i++;    	            	    	            }//    	            System.out.println(str[0]);//    	            System.out.println(str[1]);//    	            System.out.println(str[2]);    	            fileInputStream.close();    	            bufferedReader.close();    	                	                	            //Writing all contents to the recv.txt file                    		    					if(id_ip.equals(SERVER_IP_M))					{																		new File(path).mkdir();	                    File file_m = new File(path+ fileName_m);	                   	                    if (!file_m.exists()) {	                        file_m.createNewFile();	                    }	                    FileOutputStream fileOutputStream = new FileOutputStream(file_m,false);						fileOutputStream.write((str[0].toString()  + System.getProperty("line.separator") 												+ str[1].toString() + System.getProperty("line.separator") 												+ str[2].toString() + System.getProperty("line.separator")).getBytes());																		fileOutputStream.close();																		if(id.equals("P"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_p);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_P + System.getProperty("line.separator") 													+ y_P + System.getProperty("line.separator") 													+ theta_P + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}						else if(id.equals("S"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_s);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_S + System.getProperty("line.separator") 													+ y_S + System.getProperty("line.separator") 													+ theta_S + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}											}					else if(id_ip.equals(SERVER_IP_P))					{																		new File(path).mkdir();	                    File file_p = new File(path+ fileName_p);	                   	                    if (!file_p.exists()) {	                        file_p.createNewFile();	                    }	                    FileOutputStream fileOutputStream = new FileOutputStream(file_p,false);						fileOutputStream.write((str[0].toString()  + System.getProperty("line.separator") 												+ str[1].toString() + System.getProperty("line.separator") 												+ str[2].toString() + System.getProperty("line.separator")).getBytes());																		fileOutputStream.close();																		if(id.equals("M"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_m);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_M + System.getProperty("line.separator") 													+ y_M + System.getProperty("line.separator") 													+ theta_M + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}						else if(id.equals("S"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_s);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_S + System.getProperty("line.separator") 													+ y_S + System.getProperty("line.separator") 													+ theta_S + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}											}					else if(id_ip.equals(SERVER_IP_S))					{																		new File(path).mkdir();	                    File file_s = new File(path+ fileName_s);	                   	                    if (!file_s.exists()) {	                        file_s.createNewFile();	                    }	                    FileOutputStream fileOutputStream = new FileOutputStream(file_s,false);						fileOutputStream.write((str[0].toString()  + System.getProperty("line.separator") 												+ str[1].toString() + System.getProperty("line.separator") 												+ str[2].toString() + System.getProperty("line.separator")).getBytes());																		fileOutputStream.close();																		if(id.equals("P"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_p);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_P + System.getProperty("line.separator") 													+ y_P + System.getProperty("line.separator") 													+ theta_P + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}						else if(id.equals("M"))						{							new File(path).mkdir();		                    File file_o = new File(path+ fileName_m);		                   		                    if (!file_o.exists()) {		                        file_o.createNewFile();		                    }		                    		                    FileOutputStream fileOutputStream_o = new FileOutputStream(file_o,false);							fileOutputStream_o.write((x_M + System.getProperty("line.separator") 													+ y_M + System.getProperty("line.separator") 													+ theta_M + System.getProperty("line.separator")).getBytes());																				fileOutputStream_o.close();						}											}                }                 catch (IOException e)                 {                    e.printStackTrace();	                }             }         }         catch (IOException e)         {            e.printStackTrace();	        }    }    void write(PrintWriter output, String message)     {        System.out.println("Sending: "+message);        output.println(message);    }    }